import telebot
from telebot import types

nineCharList = ['9-–ê', '9-–ë', '9-–ò', '9-M', '9-C', '9-–¢', '9-–≠']
tenCharList = ['10-–ê', '10-–ë', '10-–ò', '10-–õ', '10-C', '10-–≠', '10-M']
elevenCharList = ['11-–ê', '11-–ë', '11-–ì', '11-–õ', '11-C', '11-–ò', '11-M']


class MainMenuButton(types.ReplyKeyboardMarkup):
    """
    –ù–∞—á–∞–ª—å–Ω–∞—è –∫–Ω–æ–ø–∫–∞ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
    """

    def __init__(self):
        super().__init__()
        self.add(types.KeyboardButton(text='üìÉ–†–∞—Å–ø–∏—Å–∞–Ω–∏–µüìÉ'))
        self.add(types.KeyboardButton(text='üé±–ò–≥—Ä–∞üé±'))
        self.add(types.KeyboardButton(text='üì∞–ù–æ–≤–æ—Å—Ç–∏üì∞'))


class RangeNumberInLineButton(types.InlineKeyboardMarkup):
    def __init__(self, numbers):
        super().__init__()
        for number in numbers:
            self.add(types.InlineKeyboardButton(text=str(number), callback_data=str(number)))


class Bot(telebot.TeleBot):
    """
    –ö–ª–∞—Å—Å –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞
    """

    def __init__(self, token: str):
        super().__init__(token)
        print('–ó–∞–ø—É—â–µ–Ω!')

    def __str__(self):
        return f'–¢–æ–∫–µ–Ω:{self.token}'

    def run(self):

        @self.message_handler(commands=['start'])
        def start_message(message):
            self.send_message(message.chat.id, '–Ø –º–æ–≥—É –≥–æ–≤–æ—Ä–∏—Ç—å?', reply_markup=MainMenuButton())

        @self.callback_query_handler(func=lambda call: True)
        def callback_inline(call):

            if call.data == '9':
                self.send_message(call.message.chat.id, f'–í—ã —É—á–∏—Ç–µ—Å—å –≤ 9 –∫–ª–∞—Å—Å–µ, —Ç–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ'
                                                        f' –±—É–∫–≤—É –∫–ª–∞—Å—Å–∞.',
                                  reply_markup=RangeNumberInLineButton(nineCharList))

            elif call.data == '10':
                self.send_message(call.message.chat.id, f'–í—ã —É—á–∏—Ç–µ—Å—å –≤ 10 –∫–ª–∞—Å—Å–µ, —Ç–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ'
                                                        f' –±—É–∫–≤—É –∫–ª–∞—Å—Å–∞.',
                                  reply_markup=RangeNumberInLineButton(tenCharList))
            elif call.data == '11':
                self.send_message(call.message.chat.id, f'–í—ã —É—á–∏—Ç–µ—Å—å –≤ 10 –∫–ª–∞—Å—Å–µ, —Ç–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ'
                                                        f' –±—É–∫–≤—É –∫–ª–∞—Å—Å–∞.',
                                  reply_markup=RangeNumberInLineButton(tenCharList))
                self.send_message(call.message.chat.id, f'–í—ã —É—á–∏—Ç–µ—Å—å –≤ 10 –∫–ª–∞—Å—Å–µ, —Ç–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ'
                                                        f' –±—É–∫–≤—É –∫–ª–∞—Å—Å–∞.',
                                  reply_markup=RangeNumberInLineButton(elevenCharList))

        @self.message_handler(content_types=['text'])
        def handle_message(message):

            if message.text == 'üìÉ–†–∞—Å–ø–∏—Å–∞–Ω–∏–µüìÉ':
                self.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –∫–ª–∞—Å—Å –≤ –∫–æ—Ç–æ—Ä–æ–º –≤—ã –æ–±—É—á–∞–µ—Ç–µ—Å—å.',
                                  reply_markup=RangeNumberInLineButton(range(9, 12)))

            elif message.text == 'üé±–ò–≥—Ä–∞üé±':
                pass

            elif message.text == 'üì∞–ù–æ–≤–æ—Å—Ç–∏üì∞':
                pass

        self.polling()


if __name__ == '__main__':
    Bot('1495944770:AAFJJKzDhukjYLUIh9bCWYbxdYcxcd9H9OE').run()
