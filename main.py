# coding=utf-8
import telebot
from telebot import types
from modules import subtext
from modules import siteparser
from PIL import Image


class MainMenuButton(types.ReplyKeyboardMarkup):
    """
    –ù–∞—á–∞–ª—å–Ω–∞—è –∫–Ω–æ–ø–∫–∞ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
    """

    def __init__(self):
        super().__init__()
        self.add(types.KeyboardButton(text='üìÉ–†–∞—Å–ø–∏—Å–∞–Ω–∏–µüìÉ'))
        self.add(types.KeyboardButton(text='üé±–ò–≥—Ä–∞üé±'))
        self.add(types.KeyboardButton(text='üì∞–ù–æ–≤–æ—Å—Ç–∏üì∞'))


class RangeNumberInLineButton(types.InlineKeyboardMarkup):
    def __init__(self, numbers):
        super().__init__()
        for number in numbers:
            self.add(types.InlineKeyboardButton(text=str(number), callback_data=str(number)))


class Bot(telebot.TeleBot):
    """
    –ö–ª–∞—Å—Å –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞
    """

    def __init__(self, token: str):
        super().__init__(token)
        self.__nineCharList = ('9-–ê', '9-–ë', '9-–ò', '9-M', '9-C', '9-–≠')
        self.__tenCharList = ('10-–ê', '10-–ë', '10-–ò', '10-–õ', '10-C', '10-–≠', '10-M')
        self.__elevenCharList = ('11-–ê', '11-–ë', '11-–ì', '11-–õ', '11-C', '11-–ò', '11-M')
        self.__calbacks = ('9', '10', '11')
        print('–ó–∞–ø—É—â–µ–Ω!')

    def __str__(self):
        return f'–¢–æ–∫–µ–Ω:{self.token}'

    def run(self):

        @self.message_handler(commands=['start'])
        def start_message(message):
            name = message.from_user.first_name
            self.send_message(message.chat.id, subtext.help_message.replace("%name%", name),
                              reply_markup=MainMenuButton())

        @self.callback_query_handler(func=lambda call: True)
        def callback_inline(call):

            if call.data == '9':
                self.send_message(call.message.chat.id, f'–í—ã —É—á–∏—Ç–µ—Å—å –≤ 9 –∫–ª–∞—Å—Å–µ, —Ç–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ'
                                                        ' –±—É–∫–≤—É –∫–ª–∞—Å—Å–∞.',
                                  reply_markup=RangeNumberInLineButton(self.__nineCharList))

            elif call.data == '10':
                self.send_message(call.message.chat.id, f'–í—ã —É—á–∏—Ç–µ—Å—å –≤ 10 –∫–ª–∞—Å—Å–µ, —Ç–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ'
                                                        ' –±—É–∫–≤—É –∫–ª–∞—Å—Å–∞.',
                                  reply_markup=RangeNumberInLineButton(self.__tenCharList))

            elif call.data == '11':
                self.send_message(call.message.chat.id, f'–í—ã —É—á–∏—Ç–µ—Å—å –≤ 11 –∫–ª–∞—Å—Å–µ, —Ç–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ'
                                                        ' –±—É–∫–≤—É –∫–ª–∞—Å—Å–∞.',
                                  reply_markup=RangeNumberInLineButton(self.__elevenCharList))
            # –±–ª–æ–∫ –¥–ª—è 9 –∫–ª–∞—Å—Å–æ–≤

            else:
                try:
                    print(f'media/images/—Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è/{call.data}.jpg')
                    with open(f'media/images/—Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è/{call.data}.jpg', 'rb') as f:
                        self.send_message(call.message.chat.id, f"–ó–∞–≥—Ä—É–∂–∞—é —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –∫–ª–∞—Å—Å–∞ {call.data}...")
                        self.send_photo(call.message.chat.id, f)
                except FileNotFoundError:
                    self.send_message(call.message.chat.id, f"–û–π, —è –Ω–µ –Ω–∞—à—ë–ª —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –∫–ª–∞—Å—Å–∞ {call.data} üòü")

        @self.message_handler(content_types=['text'])
        def handle_message(message):

            if message.text == 'üìÉ–†–∞—Å–ø–∏—Å–∞–Ω–∏–µüìÉ':
                self.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –∫–ª–∞—Å—Å –≤ –∫–æ—Ç–æ—Ä–æ–º –≤—ã –æ–±—É—á–∞–µ—Ç–µ—Å—å.',
                                  reply_markup=RangeNumberInLineButton(range(9, 12)))

            elif message.text == 'üé±–ò–≥—Ä–∞üé±':
                pass

            elif message.text == 'üì∞–ù–æ–≤–æ—Å—Ç–∏üì∞':
                site = siteparser.News()
                self.send_message(message.chat.id, f'*{site.getLastNewsTitle()}*\n\n{site.getLastNewsText()}',
                                  parse_mode='Markdown')

            else:
                self.send_message(message.chat.id, '–ñ–∞–ª—å, —á—Ç–æ —è –ø–ª–æ—Ö–æ –ø–æ–Ω–∏–º–∞—é –ª—é–¥–µ–πüò•')

        self.polling()


if __name__ == '__main__':
    Bot('xxx').run()
